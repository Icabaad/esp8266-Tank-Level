esphome:
  name: housewatertank
  friendly_name: housewatertank

esp8266:
  board: nodemcuv2

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "Censored"

ota:
  - platform: esphome
    password: "Censored"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.0.84
    gateway: 192.168.0.1
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Sunnynet Fallback Hotspot"
    password: "Censored"

captive_portal:

# OneWire Bus for DS18B20 (Tank Temperature Sensor)
one_wire:
  - platform: gpio
    pin: GPIO4  # Change if using a different pin (e.g., D2 on NodeMCU)

sensor:
  # 1. Primary Ultrasonic Sensor for Distance with Moving Average Filter
  - platform: ultrasonic
    trigger_pin: GPIO14
    echo_pin: GPIO12
    name: "House Water Tank Distance"
    id: house_water_tank_distance
    unit_of_measurement: "m"
    accuracy_decimals: 2
    update_interval: 5s
    timeout: 5m
    pulse_time: 10us
    filters:
      - lambda: |-
          static float smoothed_distance = 0.0;
          float alpha = 0.2;
          smoothed_distance = (1 - alpha) * smoothed_distance + alpha * x; // Update smoothed distance
          
          // Invert the distance (assuming max height is 2.3m)
          float max_height = 2.3;  // Tank max height in meters
          float sensor_min_distance = 0.0; // Sensor's minimum reading in meters
          float inverted_distance_val = max_height - (smoothed_distance - sensor_min_distance);
         
          return inverted_distance_val;  // Return inverted distance directly

  # 2. Derived Sensor for Water Tank Percentage
  - platform: template
    name: "House Water Tank Percentage"
    unit_of_measurement: '%'
    accuracy_decimals: 0
    update_interval: 5s
    lambda: |-
      // Get the inverted distance value from the ultrasonic sensor
      float inverted_distance_val = id(house_water_tank_distance).state;  // Get the inverted distance in meters

      if (isnan(inverted_distance_val)) return NAN;
      
      // Convert the inverted distance to centimeters
      float inverted_distance_cm = inverted_distance_val * 100;  // Convert meters to cm
      
      // Maximum height in centimeters
      float max_height = 230.0;  // Tank height in cm

      // Calculate the percentage of the tank that is filled based on the inverted distance
      float filled_height = inverted_distance_cm;  // Since it's inverted, this is the filled height
      float percentage = (filled_height / max_height) * 100.0;
      
      // Return the percentage, ensuring it's between 0 and 100
      return (int)round(max(0.0f, min(100.0f, percentage)));

  # 3. Derived Sensor for Water Tank Volume
  - platform: template
    name: "House Tank Volume"
    unit_of_measurement: "l"
    accuracy_decimals: 0
    update_interval: 5s
    lambda: |-
      // Get the inverted distance value from the ultrasonic sensor
      float inverted_distance_val = id(house_water_tank_distance).state;  // Get the inverted distance in meters

      if (isnan(inverted_distance_val)) return NAN;

      // Convert the inverted distance to centimeters
      float inverted_distance_cm = inverted_distance_val * 100;  // Convert meters to cm

      // Maximum height in centimeters
      float max_height = 230.0;  // Tank height in cm

      // Calculate the filled height (inverted distance gives this directly)
      float filled_height_cm = inverted_distance_cm;  // Inverted distance represents filled height
      
      // Radius of the tank in centimeters
      float radius_cm = 250.0;  // Tank radius in cm
      
      // Calculate the volume of the tank using the formula for the volume of a cylinder (π * r² * h)
      float volume = 3.14159265359 * radius_cm * radius_cm * filled_height_cm / 1000.0;  // Volume in liters

      // Return the volume in liters, ensuring it's positive
      return (int)round(max(0.0f, volume));


  # 4. DS18B20 Temperature Sensor (Tank Water Temperature)
  - platform: dallas_temp
    name: "Tank Water Temperature"
    id: tank_water_temp
    unit_of_measurement: "°C"
    accuracy_decimals: 1
    update_interval: 10s
